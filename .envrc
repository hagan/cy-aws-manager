## https://direnv.net/

_PWD=$(pwd)
_APP=`echo $_PWD | grep -Eo -i '([[:alnum:]-]*)$'`
echo "Starting $_APP environment..."
export PATH="$_PWD/bin:$PATH"

export PRJ_ROOT_DIR=$(realpath "$_PWD")

# Generate host key for our VM
# [[ -f "${_PWD}/latest/ssh/keys/ssh_host_rsa_key.gen" ]] || ssh-keygen -t rsa -f "${_PWD}/latest/ssh/keys/ssh_host_rsa_key.gen" -N ''
# [[ -f "${_PWD}/latest/ssh/keys/ssh_host_ed25519_key.gen" ]] || ssh-keygen -t ed25519 -f "${_PWD}/latest/ssh/keys/ssh_host_ed25519_key.gen" -N ''

# load our SSH public key for container

#export SSH_PUBLIC_KEY=$(cat ~/.ssh/id_ecdsa.pub | head -n 1 | tr -d '\n')
# export WG_PEER_PUBLIC_KEY=''

[ -f ${PRJ_ROOT_DIR}/.env ] && source ${PRJ_ROOT_DIR}/.env || { echo "Missing ${PRJ_ROOT_DIR}/.env!"; exit 1; }
## Export all VARS in .env
ALL_ENV_PRJ_VARS=($(grep -E '^[[:space:]]*[A-Z_][A-Z0-9_]*[[:space:]]*=' ${PRJ_ROOT_DIR}/.env | cut -f1 -d"=" | tr '\n' ' '))
for idx in "${!ALL_ENV_PRJ_VARS[@]}"; do
  # echo "idx: $idx :: ${ALL_ENV_PRJ_VARS[idx]}=${!ALL_ENV_PRJ_VARS[idx]}"
  eval "export ${ALL_ENV_PRJ_VARS[idx]}='${!ALL_ENV_PRJ_VARS[idx]}'"
done

if [ -z ${AWS_ACCOUNT_ID} ]; then
  echo "WARNING 'AWS_ACCOUNT_ID' is unset in .env"
fi

if [ -z ${AWS_ACCESS_KEY_ID} ]; then
  echo "WARNING 'AWS_ACCESS_KEY_ID' is unset in .env"
fi

if [ -z ${AWS_SECRET_ACCESS_KEY} ]; then
  echo "WARNING 'AWS_SECRET_ACCESS_KEY' is unset in .env"
fi

if [ -z ${AWS_SESSION_TOKEN} ]; then
  echo "WARNING 'AWS_SESSION_TOKEN' is unset in .env"
fi

if [ -z ${AWS_DEFAULT_REGION} ]; then
  echo "WARNING 'AWS_DEFAULT_REGION' is unset in .env"
fi

if [ ! -z ${APIGATEWAY_NAME} ]; then
  export APIGATEWAY_NAME='cy-awsmgr-gateway'
fi

if [ -z ${APIGATEWAY_API_KEY_NAME} ]; then
  export APIGATEWAY_API_KEY_NAME='VICE_DEMO_ACCESSKEY'
fi

if [ -z ${APIGATEWAY_STAGE} ]; then
  export APIGATEWAY_STAGE='dev'
fi

export DOCKER_BUILDKIT=1