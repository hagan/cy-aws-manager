name: harbor

on:
  workflow_dispatch:
  # push:
  # branches-ignore:
  #   - main
  # branches:
    # - main

jobs:

  build:
    runs-on: ubuntu-latest
    #! env:
    #!   IMAGE_NAME: 'appstream'
    #!   TAG: 'latest'
    #!   DOCKER_DIR: '.'
    #!   CONTEXT: '.'
    #!   PIP_WHEEL_FILENAME: 'appstreamer-0.1.1-py3-none-any.whl'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          ssh-key: ${{ secrets.ACCESS_KEY }}
      
      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make git-lfs

      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git lfs install
          git lfs pull
      
      # - name: Load config.mk file
      #   uses: falti/dotenv-action@v1.0.4
      #   with:
      #     path: config.mk
      #     keys-case: "bypass"
      #     log-variables: true
      #     export-variables: true

      - name: Extract Variables from config.mk
        id: vars
        run: |
          . ./extract-vars.sh config.mk

      - name: Show exported variables from config.mk
        run: |
          echo "Extracted vars from config.mk..."
          echo "    COMMENT: $COMMENT == ${{ steps.vars.outputs.COMMENT}} == ${{ env.COMMENT}}"
          echo "    SRC_DOCKER_IMAGE: $SRC_DOCKER_IMAGE == ${{ steps.vars.outputs.SRC_DOCKER_IMAGE}} == ${{ env.SRC_DOCKER_IMAGE}}"
          echo "    SRC_DOCKER_VER: $SRC_DOCKER_VER == ${{ steps.vars.outputs.SRC_DOCKER_VER}} == ${{ env.SRC_DOCKER_VER}}"
          echo "    DOCKER_IMAGE: $DOCKER_IMAGE == ${{ steps.vars.outputs.DOCKER_IMAGE}} == ${{ env.DOCKER_IMAGE}}"
          echo "    DOCKER_TAG: $DOCKER_TAG == ${{ steps.vars.outputs.DOCKER_TAG}} == ${{ env.DOCKER_TAG}}"
          echo "    DOCKER_DIR: $DOCKER_DIR == ${{ steps.vars.outputs.DOCKER_DIR}} == ${{ env.DOCKER_DIR}}"
          echo "    FLASK_DIR: $FLASK_DIR == ${{ steps.vars.outputs.FLASK_DIR}} == ${{ env.FLASK_DIR}}"
          echo "    NODE_DIR: $NODE_DIR == ${{ steps.vars.outputs.NODE_DIR}} == ${{ env.NODE_DIR}}"
          echo "    VICE_DIR: $VICE_DIR == ${{ steps.vars.outputs.VICE_DIR}} == ${{ env.VICE_DIR}}"
          echo "    NVM_DIR: $NVM_DIR == ${{ steps.vars.outputs.NVM_DIR}} == ${{ env.NVM_DIR}}"
          echo "    CONTEXT: $CONTEXT == ${{ steps.vars.outputs.CONTEXT}} == ${{ env.CONTEXT}}"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.8.0
        env:
          STEP_DEBUG: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Login to harbor
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: harbor.cyverse.org
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_CLISECRET }}

      #! - name: Load .env.docker file
      #!   run: |
      #!     set -a
      #!     source .env.docker
      #!     export PIP_WHEEL_FILENAME
      #!     echo "PIP_WHEEL_FILENAME=$PIP_WHEEL_FILENAME"
      #!     set +a

      #! removed from below
      #!   echo "PIP_WHEEL_FILENAME=${{ env.PIP_WHEEL_FILENAME }}"
      #!   echo "APPSTREAM_LAMBDA_API=${{ env.APPSTREAM_LAMBDA_API }}"

      - name: Print environment variables
        run: |
          echo "DOCKER_IMAGE=${{ steps.vars.outputs.DOCKER_IMAGE }}"
          echo "DOCKER_TAG=${{ steps.vars.outputs.DOCKER_TAG }}"
          echo "CONTEXT=${{ steps.vars.outputs.CONTEXT }}"
          echo "DOCKER_DIR=${{ steps.vars.outputs.DOCKER_DIR }}"
          echo "SRC_DOCKER_IMAGE=${{ steps.vars.outputs.SRC_DOCKER_IMAGE}}"
          echo "SRC_DOCKER_VER=${{ steps.vars.outputs.SRC_DOCKER_VER}}"
        env:
          STEP_DEBUG: true

      - name: Build and push latest
        id: docker_build_latest
        uses: docker/build-push-action@v4.1.1
        env:
          STEP_DEBUG: true
        with:
          #! context: latest
          context: ${{ steps.vars.outputs.CONTEXT }}
          #! todo: simplfy path
          file: ${{ steps.vars.outputs.DOCKER_DIR }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm64
          #! how can we make appstream:latest change to our environment
          tags: harbor.cyverse.org/vice/appstream:latest
          build-args: |
            DOCKER_IMAGE=${{ steps.vars.outputs.DOCKER_IMAGE }}
            DOCKER_TAG=${{ steps.vars.outputs.DOCKER_TAG }}
            CONTEXT=${{ steps.vars.outputs.CONTEXT }}
            DOCKER_DIR=${{ steps.vars.outputs.DOCKER_DIR }}
            SRC_DOCKER_IMAGE=${{ steps.vars.outputs.SRC_DOCKER_IMAGE}}
            SRC_DOCKER_VER=${{ steps.vars.outputs.SRC_DOCKER_VER}}
          #! removed
          #! PIP_WHEEL_FILENAME=${{ env.PIP_WHEEL_FILENAME }}
          #! APPSTREAM_API=${{ env.APPSTREAM_API }}
          #! APPSTREAM_LAMBDA_ROOT_URL=${{ env.APPSTREAM_LAMBDA_ROOT_URL }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
